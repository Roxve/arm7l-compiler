name: Simulate ARM and Print uname

on:
  push:
    branches:
      - main

jobs:
  simulate-arm:
    runs-on: ubuntu-latest

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Run ARM Container
        run: |
          echo "FROM arm32v7/ubuntu:latest" > Dockerfile.arm
          echo "RUN apt-get update && apt-get install -yq qemu-user-static" >> Dockerfile.arm
          echo "CMD uname -m" >> Dockerfile.arm

          docker buildx create --use
          docker buildx build --platform linux/arm/v7 -t arm-simulator --load -f Dockerfile.arm .

      - name: Run uname -m inside ARM container
        run: |
          docker run -t arm-simulator uname -m
      - name: Run shell
        run: |
          docker cp "$(docker ps -lq):/root/" ~/
          docker run -t arm-simulator bash -c '
           mkdir root
           cd $HOME
           apt update -y && apt upgrade -y
           apt install wget make cmake xz-utils git gcc -y 
           wget https://github.com/nim-lang/nightlies/releases/download/latest-devel/linux_armv7l.tar.xz
           tar -xf linux_armv7l.tar.xz 
           cd nim-2.1.1  
           chmod -R 777 * 
           cp bin/nimble /usr/bin
           ./install.sh /usr/bin
           # export PATH="$PATH:$HOME/nim-2.1.1/bin"
           echo $PATH 
           mkdir /usr/lib/nim/lib/ 
           cp -r /usr/lib/nim/* /usr/lib/nim/lib/
           nimble install nimlangserver
           # Copy artifact to a location accessible by the GitHub Actions runner
          '
          docker cp "$(docker ps -lq):/root/.nimble" ~/

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: nimble-artifact
          path: ~/.nimble
